events { worker_connections 1024; }
http {
	include /etc/nginx/mime.types;

  server {
    # redirect
		listen 80;
		server_name mystore.com *.mystore.com;

		location /.well-known/acme-challenge {
      default_type "text/plain";
      root /tmp/letsencrypt;
		}

		location / {
			return 301 https://$server_name$request_uri;
		}

	}

	server {
    # mystore app
    # Put this on 443 and newsletter on 8443 to change which is "live"

		listen 8443 ssl;
		server_name mystore.com *.mystore.com;
		client_max_body_size 10M;


		ssl_certificate /etc/letsencrypt/live/mystore.com/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/mystore.com/privkey.pem;
		ssl_session_timeout 5m;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers 'ssl-ciphers'; #KEY REMOVED
		ssl_prefer_server_ciphers on;

		ssl_session_cache shared:SSL:10m;
		ssl_dhparam /etc/ssl/private/dhparams.pem;

		location /.well-known/acme-challenge {
      default_type "text/plain";
      root /tmp/letsencrypt;
		}

		location / {
			proxy_pass http://mystore:8080;
			proxy_set_header Host              $host;
			proxy_set_header X-Forwarded-For   $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        keep-alive;
      proxy_cache_bypass $http_upgrade;
		}
	}


server {
    # newsletter
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot

		ssl_certificate /etc/letsencrypt/live/mystore.com/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/mystore.com/privkey.pem;
		ssl_session_timeout 5m;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers 'ssl-ciphers'; #KEY REMOVED
		ssl_prefer_server_ciphers on;

    root /srv/www/mystore.com;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    server_name mystore.com www.mystore.com;

    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }

    error_page 404 /404.html;

    location = /404.html {
            root /srv/www/mystore.com;
            internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
            root /srv/www/mystore.com;
            internal;
    }


  }
}
